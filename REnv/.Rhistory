load("E:/GCModeller/src/R-sharp/REnv/data/paletteer/palettes_d.rda")
palettes_d$ggthemes
names(palettes_d$ggthemes)
a = names(palettes_d$ggthemes)
a[order(a)]
load("E:/GCModeller/src/R-sharp/REnv/data/paletteer/palettes_c_names.rda")
View(palettes_c_names)
load("E:/GCModeller/src/R-sharp/REnv/data/paletteer/palettes_dynamic.rda")
View(palettes_dynamic)
load("E:/GCModeller/src/R-sharp/REnv/data/paletteer/palettes_dynamic_names.rda")
View(palettes_dynamic_names)
load("E:/GCModeller/src/R-sharp/REnv/data/paletteer/palettes_d_names.rda")
View(palettes_d_names)
load("E:/GCModeller/src/R-sharp/REnv/data/paletteer/palettes_d.rda")
View(palettes_d)
View(palettes_d_names)
root
install.packages("kohonen")
library(kohonen)
data(iris)
iris_data <- iris[, 1:4]
iris_data
iris_data <- scale(iris_data)
iris_data
som_grid <- somgrid( 10,  10, topo = "hexagonal")
som_grid
som_model <- som(iris_data, grid = som_grid, rlen = 100, alpha = c(0.05, 0.01))
som_model
str(som_model)
plot(som_model, type = "codes", main = "SOM Codebook Vectors")
som_grid <- somgrid( 10,  10, topo = "rectangular")
som_model <- som(iris_data, grid = som_grid, rlen = 100, alpha = c(0.05, 0.01))
plot(som_model, type = "codes", main = "SOM Codebook Vectors")
bmu_indices <- som_model$bmus(iris_data)
help(som)
help(scale)
x = 1:100
scale(x)
require(stats)
x <- matrix(1:10, ncol = 2)
(centered.x <- scale(x, scale = FALSE))
cov(centered.scaled.x <- scale(x)) # all 1
x1 = c("","","","","")
scale(x1)
x
t.test(c(2,3,4,2,3,4,3,1,3,1,2,3,1,3,1,2), runif(16))
t.test(c(2,3,4,2,3,4,3,1,3,1,2,3,1,3,1,2), rep(1,16))
t.test
help(t.tes)
help(t.test)
gamma(4)
help(gamma)
help(png)
help(postscript)
require(ggplot2)
help(geom_segment)
help(arrow)
help(geom_segment)
require(graphics)
help(arrow)
help(unit)
help(unit)
help(arrow)
help(geom_segment)
help(cmdscale)
require(graphics)
loc <- cmdscale(eurodist)
loc
help(parse)
data <- c(2, 4, 4, 4, 5, 5, 7, 9);
summary(data)
str(summary(data))
str2lang("str(data)")
exp = str2lang("str(data)")
exp
eval(exp)
exp = str2expression("str(data)")
exp
exp
eval(exp)
exp = str2expression(c("str(data)","1+1"))
exp
exp
eval(exp)
expr =
exp = str2lang(c("str(data)","1+1"))
install.packages("e1071")
library(e1071)
data <- c(2, 4, 4, 4, 5, 5, 7, 9)
skewness(data)
kurtosis(data)
help( skewness)
skewness(data,type =1)
skewness(data,type =2)
skewness(data,type =3)
help(kurtosis)
kurtosis(data,type=1)
kurtosis(data,type=2)
kurtosis(data,type=3)
q()
require(e1071)
help(kurtosis)
help(skewness)
help(skewness)
data = c(2, 4, 4, 4, 5, 5, 7, 9);
kurtosis(data,type =1);
kurtosis(data,type =2);
kurtosis(data,type =3);
data = c(2, 4, 4, 4, 5, 5, 7, 9)
skewness(data,type = 1);
skewness(data,type = 2);
skewness(data,type = 3);
library(moments)
install.packages
install.packages("moments")
library(moments)
x = dara
x=data
x
moment(x, order=2, center=FALSE)
moment(x)
help(moment)
all.moments(x)
help(moment)
help(moment)
data = c(2, 4, 4, 4, 5, 5, 7, 9);
moment(data, 2);
moment(data, 2, central=TRUE);
moment(data, 3);
moment(data, 3, central=TRUE);
help(rexp)
help("rep")
sum = 0
for(i in 1:100) { sum=sum + 0.1 }
sum
help(system)
help(system2)
