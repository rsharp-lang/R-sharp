.\" man page create by R# package system.
.TH RCONVERSION 1 2002-May "as.double" "as.double"
.SH NAME
as.double \- Double-Precision Vectors
.SH SYNOPSIS
\fIas.double(\fBx\fR as any, 
[\fB<Environment>\fR]);\fR
.SH DESCRIPTION
.PP
Double-Precision Vectors
 
 Create, coerce to or test for a double-precision vector.
.PP
.SH OPTIONS
.PP
\fBx\fB \fR\- object to be coerced or tested.. 
.PP
.PP
\fBenv\fB \fR\- -. 
.PP
.SH VALUE
.PP
as.double attempts to coerce its argument to be of double
 type: like as.vector it strips attributes including names. 
 (To ensure that an object is of double type without 
 stripping attributes, use storage.mode.) Character strings 
 containing optional whitespace followed by either a 
 decimal representation or a hexadecimal representation 
 (starting with 0x or 0X) can be converted, as can special 
 values such as "NA", "NaN", "Inf" and "infinity", 
 irrespective of case.
.PP
.SH DETAILS
.PP
as.double is a generic function. It is identical to as.numeric. 
 Methods should return an object of base type "double".
 
 ### Double-precision values
 All R platforms are required To work With values conforming To
 the IEC 60559 (also known As IEEE 754) standard. This basically
 works With a precision Of 53 bits, And represents To that 
 precision a range Of absolute values from about 2E-308 To 2E+308.
 It also has special values NaN (many Of them), plus And minus 
 infinity And plus And minus zero (although R acts As If these 
 are the same). There are also denormal(ized) (Or subnormal)
 numbers With absolute values above Or below the range given
 above but represented To less precision.
 
 See .Machine for precise information on these limits. Note that
 ultimately how double precision numbers are handled Is down to 
 the CPU/FPU And compiler.
 
 In IEEE 754-2008/IEC605592011 this Is called 'binary64’ format.
 
 ### Note on names
 It Is a historical anomaly that R has two names for its floating-
 point vectors, double And numeric (And formerly had real).
 
 Double Is the name Of the type. numeric Is the name Of the mode 
 And also Of the implicit Class. As an S4 formal Class, use 
 "numeric".
 
 The potential confusion Is that R has used mode "numeric" To mean 
 'double or integer’, which conflicts with the S4 usage. Thus is.numeric
 tests the mode, not the class, but as.numeric (which is identical
 to as.double) coerces to the class.
.PP
.SH SEE ALSO
RConversion
.SH FILES
.PP
REnv.dll
.PP
.SH COPYRIGHT
GPL3
